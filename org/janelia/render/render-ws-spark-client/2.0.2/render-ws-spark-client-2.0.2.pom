<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>modules-root</artifactId>
        <groupId>org.janelia.render</groupId>
        <version>2.0.2</version>
    </parent>

    <name>Render Web Service Spark Client</name>
    <artifactId>render-ws-spark-client</artifactId>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.7.1</version>

                <executions>
                    <execution>
                        <id>shade-standalone</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>

                        <configuration>

                            <outputFile>target/${project.artifactId}-${project.version}-standalone.jar</outputFile>

                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                                <!-- not sure if this filter is needed ...
                                <filter>
                                    <artifact>sc.fiji</artifact>
                                    <excludes>
                                        <exclude>lenscorrection/NonLinearTransform.class</exclude>
                                    </excludes>
                                </filter>
                                -->
                            </filters>

                            <artifactSet>
                               <excludes>
                                   <exclude>jama:*</exclude>
                                   <exclude>*hadoop*</exclude>
                                   <exclude>*spark*</exclude>
                                </excludes>
                            </artifactSet>

                        </configuration>

                    </execution>

                </executions>

            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.janelia.render</groupId>
            <artifactId>render-ws-java-client</artifactId>
            <version>${render-version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <version>2.2.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- explicitly reference desired Guava version here to override older version brought in by hadoop libraries -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava-version}</version>
        </dependency>

        <!-- explicitly reference newer hadoop libraries to work around Guava version conflict that causes StopWatch.<init> IllegalAccessError -->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>2.7.2</version>
            <scope>provided</scope>
        </dependency>

        <!-- explicitly reference newer hadoop libraries to work around Guava version conflict that causes StopWatch.<init> IllegalAccessError -->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-mapreduce-client-core</artifactId>
            <version>2.7.2</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>


</project>